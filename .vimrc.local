    " SnipMate {
        " Setting the author var
        " If forking, please overwrite in your .vimrc.local file
        let g:snips_author = 'Michael Stangl <michael.stangl@gmail.com>'
    " }
    "
let vimrc_dir="$HOME/.vim"
let VIMRC_DIR="$HOME/.vim"
" Filespezifische Makros und Templates {
if !exists("autocommands_loaded")
    let autocommands_loaded = 1

    " file types
    autocmd FileType javascript set ts=4 sw=4
    autocmd FileType html set ts=2 sw=2
    autocmd BufNewFile,BufRead *.css.dtml setfiletype css
    autocmd BufNewFile,BufRead *.zcml setfiletype xml
    autocmd FileType fortran set noexpandtab

    " python
    autocmd FileType python set ts=4 sw=4 expandtab nocin nosi ai
    autocmd FileType python set makeprg=pyflakes\ %
    autocmd FileType python set efm=%f:%l:%m
    autocmd BufNewFile,BufRead *.cpy setfiletype python
    let pymode_lint_write=0

    " C mode
    autocmd FileType c set fo=croq ts=8 sw=8 cin si ai
    autocmd FileType c syn region cSpecial start="_DBG" end=");"

    "macros
    autocmd FileType tcl 	source  $VIMRC_DIR/macros/tclmakros.vim
    autocmd FileType c 	source  $VIMRC_DIR/macros/cmakros.vim
    autocmd FileType cpp 	source  $VIMRC_DIR/macros/cppmakros.vim
    autocmd FileType dosbatch 	source  $VIMRC_DIR/macros/batmakros.vim
    autocmd FileType perl 	source $VIMRC_DIR/macros/perlmakros.vim
    autocmd FileType python 	source $VIMRC_DIR/macros/pythonmakros.vim
    autocmd FileType fortran 	source $VIMRC_DIR/macros/fortranmakros.vim
    autocmd FileType sh,bash	source $VIMRC_DIR/macros/shellmakros.vim
    autocmd FileType matlab	source $VIMRC_DIR/macros/matlabmakros.vim
    autocmd FileType latex 	source  $VIMRC_DIR/macros/texmakros.vim
    autocmd FileType txt 		source  $VIMRC_DIR/macros/textmakros.vim
    autocmd BufNewFile,BufRead *.dbg	source $VIMRC_DIR/macros/debugfold.vim

    "spezielles syntax highlighting 
     autocmd FileType tjp 	source  $VIMRC_DIR/syntax/tjp.vim
    "autocmd FileType c source  $VIMRC_DIR/syntax/prosyntax.vim
    "autocmd FileType fortran source  $VIMRC_DIR/syntax/fortransyntax.vim
    "autocmd FileType matlab  source  $VIMRC_DIR/syntax/matlabsyntax.vim


endif
" }
"
"
let NERDTreeQuitOnOpen = 0
set nospell

" LoadGui Fonts {
if has('gui_running')
    if has("gui_gtk2")
        set guifont=Andale\ Mono\ Regular\ 11,Menlo\ Regular\ 10,Consolas\ Regular\ 11,Courier\ New\ Regular\ 13
    else
        set guifont=Andale\ Mono\ Regular:h14,Menlo\ Regular:h13,Consolas\ Regular:h14,Courier\ New\ Regular:h16
    endif
    if has('gui_macvim')
        set transparency=2          " Make the window slightly transparent
    endif
    set background=light
else
    set background=dark
endif
" }
" ShowMarks {
    let showmarks_include = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
    " Don't leave on by default, use :ShowMarksOn to enable
    let g:showmarks_enable = 0
    " For marks a-z
    highlight ShowMarksHLl gui=bold guibg=LightBlue guifg=Blue
    " For marks A-Z
    highlight ShowMarksHLu gui=bold guibg=LightRed guifg=DarkRed
    " For all other marks
    highlight ShowMarksHLo gui=bold guibg=LightYellow guifg=DarkYellow
    " For multiple marks on the same line.
    highlight ShowMarksHLm gui=bold guibg=LightGreen guifg=DarkGreen
" }
set autoread                    " automatically reads, helpful when VCS may have changed the file

" NERDTree {
    let g:nerdtree_tabs_open_on_gui_startup=0
    let g:nerdtree_tabs_open_on_new_tab=1
    let NERDTreeMouseMode=1
" }

" FX-keys {
    nmap <F2> :w
    nmap <S-F2> :make
    nmap <C-F2> :make %<

    nmap <F4> :bdel
    nmap <S-F4> :close
    nmap <F5> :bp
    nmap <F6> :bn
    nmap <S-F5> :cp
    nmap <S-F6> :cn

    " tags
    nmap <F8> 
    nmap <C-F8> 
    nmap <S-F8> :tn
    nmap <F7> 

    " Split-Window Movement: <apple><cursorkeys>
    nmap <D-Up> <Up>
    nmap <D-Down> <Down>
    nmap <D-Right> <Right>
    nmap <D-Left> <Left>
    nmap <C-S-Up> <Up>_
    nmap <C-S-Down> <Down>_

    " folding
    nmap <M-C-Left> zf%
    nmap <M-C-Right> zO
    nmap <F12> zf%]]
    nmap <S-F12> zO]]
" }

set hlsearch
set incsearch


" vim: set foldmarker={,} foldlevel=0 foldmethod=marker spell:
